// Generated by view binder compiler. Do not edit!
package br.com.newscurrent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.newscurrent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NewsCurrentItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatTextView actvAuthor;

  @NonNull
  public final AppCompatTextView actvAuthorTitle;

  @NonNull
  public final AppCompatTextView actvContent;

  @NonNull
  public final AppCompatTextView actvDescription;

  @NonNull
  public final AppCompatTextView actvNewsContent;

  @NonNull
  public final AppCompatTextView actvNewsDescription;

  @NonNull
  public final AppCompatTextView actvNewsTitle;

  @NonNull
  public final AppCompatTextView actvTitle;

  private NewsCurrentItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatTextView actvAuthor, @NonNull AppCompatTextView actvAuthorTitle,
      @NonNull AppCompatTextView actvContent, @NonNull AppCompatTextView actvDescription,
      @NonNull AppCompatTextView actvNewsContent, @NonNull AppCompatTextView actvNewsDescription,
      @NonNull AppCompatTextView actvNewsTitle, @NonNull AppCompatTextView actvTitle) {
    this.rootView = rootView;
    this.actvAuthor = actvAuthor;
    this.actvAuthorTitle = actvAuthorTitle;
    this.actvContent = actvContent;
    this.actvDescription = actvDescription;
    this.actvNewsContent = actvNewsContent;
    this.actvNewsDescription = actvNewsDescription;
    this.actvNewsTitle = actvNewsTitle;
    this.actvTitle = actvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NewsCurrentItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NewsCurrentItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.news_current_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NewsCurrentItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actvAuthor;
      AppCompatTextView actvAuthor = ViewBindings.findChildViewById(rootView, id);
      if (actvAuthor == null) {
        break missingId;
      }

      id = R.id.actvAuthorTitle;
      AppCompatTextView actvAuthorTitle = ViewBindings.findChildViewById(rootView, id);
      if (actvAuthorTitle == null) {
        break missingId;
      }

      id = R.id.actvContent;
      AppCompatTextView actvContent = ViewBindings.findChildViewById(rootView, id);
      if (actvContent == null) {
        break missingId;
      }

      id = R.id.actvDescription;
      AppCompatTextView actvDescription = ViewBindings.findChildViewById(rootView, id);
      if (actvDescription == null) {
        break missingId;
      }

      id = R.id.actvNewsContent;
      AppCompatTextView actvNewsContent = ViewBindings.findChildViewById(rootView, id);
      if (actvNewsContent == null) {
        break missingId;
      }

      id = R.id.actvNewsDescription;
      AppCompatTextView actvNewsDescription = ViewBindings.findChildViewById(rootView, id);
      if (actvNewsDescription == null) {
        break missingId;
      }

      id = R.id.actvNewsTitle;
      AppCompatTextView actvNewsTitle = ViewBindings.findChildViewById(rootView, id);
      if (actvNewsTitle == null) {
        break missingId;
      }

      id = R.id.actvTitle;
      AppCompatTextView actvTitle = ViewBindings.findChildViewById(rootView, id);
      if (actvTitle == null) {
        break missingId;
      }

      return new NewsCurrentItemBinding((ConstraintLayout) rootView, actvAuthor, actvAuthorTitle,
          actvContent, actvDescription, actvNewsContent, actvNewsDescription, actvNewsTitle,
          actvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
